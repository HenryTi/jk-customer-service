{"version":3,"sources":["consts.ts","webUser/VPendingAuditUserList.tsx","webUser/CWebUser.tsx","me/VMe.tsx","me/CMe.tsx","CCustomerServiceApp.tsx","VMain.tsx","ui/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["consts","VPendingAuditUserList","_VPage","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderPendingUser","user","id","firstName","react","content","observer","pendingUsers","controller","dist","header","items","item","render","inherits","createClass","key","value","_open","asyncToGenerator","regenerator_default","a","mark","_callee","param","wrap","_context","prev","next","stop","_x","VPage","CWebUser","_class","_Controller","cApp","res","_this2","pendingAuditUserQuery","initializerDefineProperty","_descriptor","assertThisInitialized","renderUserList","renderView","tab","cUqWebUser","query","_internalStart","table","undefined","sent","Controller","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","VMe","CMe","renderMe","CCustomerServiceApp","_CApp","topKey","currentSalesRegion","currentLanguage","cUqOrder","cUqProduct","cUqCommon","cUqCustomer","cUqCustomerDiscount","cUqPromotion","cUqWarehouse","cUqMember","cWebUser","cMe","salesRegionTuid","languageTuid","getCUq","tuid","load","nav","start","showMain","initTabName","openVPage","VAppMain","CApp","color","selected","ui","appName","main","VMain","_this$controller","faceTabs","name","label","icon","notify","map","v","caption","TabCaptionComponent","tabs","openPage","uqs","App","onLogined","startApp","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d932bb8.chunk.js","sourcesContent":["export const consts = {\r\n\r\n    uqOrder: '百灵威系统工程部/order',\r\n    uqProduct: \"百灵威系统工程部/product\",\r\n    uqCommon: '百灵威系统工程部/common',\r\n    uqWebUser: '百灵威系统工程部/webuser',\r\n    uqCustomer: '百灵威系统工程部/customer',\r\n    uqCustomerDiscount: '百灵威系统工程部/customerDiscount',\r\n    uqPromotion: '百灵威系统工程部/promotion',\r\n    uqWarehouse: \"百灵威系统工程部/warehouse\",\r\n    uqMember: '百灵威系统工程部/member',\r\n\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}\r\n","import * as React from 'react';\r\nimport { CWebUser } from './CWebUser';\r\nimport { observer } from 'mobx-react';\r\nimport { VPage, Page, List } from 'tonva';\r\n\r\nexport class VPendingAuditUserList extends VPage<CWebUser> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    render(param?: any): JSX.Element {\r\n        return <this.content />\r\n    }\r\n\r\n    private renderPendingUser = (user: any) => {\r\n        let { id, firstName } = user;\r\n        return <div>\r\n            {id} {firstName}\r\n        </div>\r\n    }\r\n\r\n    private content = observer(() => {\r\n\r\n        let { pendingUsers } = this.controller;\r\n        return <Page header=\"待审核\">\r\n            <List items={pendingUsers} item={{ render: this.renderPendingUser }} />\r\n        </Page>\r\n    })\r\n}","import * as React from 'react';\r\nimport { Controller, Query } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\nimport { VPendingAuditUserList } from './VPendingAuditUserList';\r\nimport { observable } from 'mobx';\r\n\r\nexport class CWebUser extends Controller {\r\n\r\n    private cApp: CCustomerServiceApp;\r\n    private pendingAuditUserQuery: Query;\r\n    @observable pendingUsers: any[];\r\n    constructor(cApp: CCustomerServiceApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n\r\n        let { cUqWebUser } = this.cApp;\r\n        this.pendingAuditUserQuery = cUqWebUser.query('getpendingaudituser');\r\n    }\r\n\r\n    protected async internalStart(param?: any) {\r\n        this.pendingUsers = await this.pendingAuditUserQuery.table(undefined);\r\n    }\r\n\r\n    private renderUserList = () => {\r\n        return this.renderView(VPendingAuditUserList);\r\n    }\r\n\r\n    tab = () => <this.renderUserList />\r\n}","import * as React from 'react';\r\nimport { VPage } from 'tonva';\r\nimport { CMe } from './CMe';\r\n\r\nexport class VMe extends VPage<CMe> {\r\n\r\n    async open(param?: any) {\r\n\r\n    }\r\n\r\n    render(param?: any): JSX.Element {\r\n        return <>eee</>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Controller } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\nimport { VMe } from './VMe';\r\n\r\nexport class CMe extends Controller {\r\n\r\n    private cApp: CCustomerServiceApp;\r\n    constructor(cApp: CCustomerServiceApp, res: any) {\r\n        super(res);\r\n        this.cApp = cApp;\r\n    }\r\n\r\n    async internalStart(param?: any) {\r\n\r\n    }\r\n\r\n    private renderMe = () => {\r\n        return this.renderView(VMe);\r\n    }\r\n\r\n    tab = () => <this.renderMe />\r\n}\r\n","import { nav } from 'tonva';\r\nimport { CApp, CUq } from 'tonva';\r\nimport { consts } from './consts';\r\nimport { CWebUser } from 'webUser/CWebUser';\r\nimport { CMe } from 'me/CMe';\r\n\r\nexport class CCustomerServiceApp extends CApp {\r\n    topKey: any;\r\n\r\n    currentSalesRegion: any;\r\n    currentLanguage: any;\r\n\r\n    cUqOrder: CUq;\r\n    cUqProduct: CUq;\r\n    cUqCommon: CUq;\r\n    cUqWebUser: CUq;\r\n    cUqCustomer: CUq;\r\n    cUqCustomerDiscount: CUq;\r\n    cUqPromotion: CUq;\r\n    cUqWarehouse: CUq;\r\n    cUqMember: CUq;\r\n\r\n    cWebUser: CWebUser;\r\n    cMe: CMe;\r\n\r\n    protected async internalStart() {\r\n        this.cUqOrder = this.getCUq(consts.uqOrder);\r\n        this.cUqProduct = this.getCUq(consts.uqProduct);\r\n        this.cUqCommon = this.getCUq(consts.uqCommon);\r\n        this.cUqWebUser = this.getCUq(consts.uqWebUser);\r\n        this.cUqCustomer = this.getCUq(consts.uqCustomer);\r\n        this.cUqCustomerDiscount = this.getCUq(consts.uqCustomerDiscount);\r\n        this.cUqPromotion = this.getCUq(consts.uqPromotion);\r\n\r\n        this.cWebUser = new CWebUser(this, undefined);\r\n        this.cMe = new CMe(this, undefined);\r\n\r\n        let salesRegionTuid = this.cUqCommon.tuid('salesregion');\r\n        this.currentSalesRegion = await salesRegionTuid.load(1);\r\n\r\n        let languageTuid = this.cUqCommon.tuid('language');\r\n        this.currentLanguage = await languageTuid.load(197);\r\n\r\n        this.topKey = nav.topKey();\r\n        await this.cWebUser.start();\r\n        this.showMain();\r\n    }\r\n\r\n    showMain(initTabName?: string) {\r\n        this.openVPage(this.VAppMain, initTabName);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CCustomerServiceApp } from 'CCustomerServiceApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VMain extends VPage<CCustomerServiceApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cWebUser, cMe } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '首页', icon: 'home', content: cWebUser.tab, notify: undefined/*store.homeCount*/ },\r\n            { name: 'me', label: '我的', icon: 'user', content: cMe.tab }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { AppUI } from 'tonva';\r\nimport { CCustomerServiceApp } from '../CCustomerServiceApp';\r\nimport { VMain } from 'VMain';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"百灵威系统工程部/customer-service\",\r\n    CApp: CCustomerServiceApp,\r\n    main: VMain as any,\r\n    uqs: {\r\n    },\r\n}\r\n\r\nexport default ui;\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport { NavView } from 'tonva';\r\nimport { startApp } from 'tonva';\r\nimport ui from './ui';\r\n\r\n//const tonvaApp = \"bruce/TestApp\";\r\n\r\nclass App extends React.Component {\r\n\r\n    private onLogined = async () => {\r\n        await startApp(ui);\r\n    }\r\n    public render() {\r\n        return <NavView onLogined={this.onLogined} />\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}